{"version":3,"sources":["algorithms/algorithms.js","Cell.js","MySnackbarContentWrapper.js","Grid.js","App.js","serviceWorker.js","index.js"],"names":["Algorithms","rows","cols","startPos","endPos","walls","this","marked","node","i","x","j","y","adjNodes","push","areEqual","some","n","node1","node2","Math","abs","t0","performance","now","visited","queue","distance","path","length","minDist","Infinity","minIndex","el","splice","isEnd","time","getAdjacentNodes","isMarked","isWall","isOutOfBounds","mark","undefined","openList","closedList","f","g","h","gScore","gScoreIsBest","manhattanDistance","Error","dfsHelper","shift","q1","q2","visited1","visited2","pathExists1","pathExistsHelper","pathExists2","q","path2","find","max","Cell","props","id","pos","className","wall","start","end","onMouseDown","mouseDownHandler","onMouseEnter","mouseEnterHandler","onMouseUp","mouseLeaveHandler","onClick","clickHandler","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","classes","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","action","IconButton","key","aria-label","color","Grid","NUM_ROWS","window","innerHeight","NUM_COLUMNS","innerWidth","useState","floor","setStartPos","setEndPos","setWalls","clicked","setClicked","changingStartPos","setChangingStartPos","changingEndPos","setChangingEndPos","pathFound","setPathFound","pathNotFound","setPathNotFound","pathLength","setPathLength","pathTime","setPathTime","isStartPos","isEndPos","animate","counter","setTimeout","document","getElementById","classList","add","speed","clearCells","remove","addWall","removeWall","index","findIndex","elements","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","toFixed","Card","style","marginTop","Button","algorithms","result","bfs","dfs","bidirectionalBFS","aStar","App","React","useEffect","loadCSS","querySelector","setSpeed","realSpeed","setRealSpeed","settingsOpen","setSettingsOpen","AppBar","position","Toolbar","minHeight","Typography","marginLeft","href","target","rel","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","gutterBottom","Slider","min","value","onChange","ev","s","DialogActions","Container","maxWidth","Link","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cc80390d.chunk.js","sourcesContent":["export default class Algorithms {\n  constructor(rows, cols, startPos, endPos, walls) {\n    this.rows = rows;\n    this.cols = cols;\n    this.startPos = startPos;\n    this.endPos = endPos;\n    this.walls = walls;\n    this.marked = [];\n  }\n\n  getAdjacentNodes(node) {\n    const i = node.x, j = node.y;\n    const adjNodes = [];\n    adjNodes.push({ x: i - 1, y: j });\n    adjNodes.push({ x: i, y: j + 1 });\n    adjNodes.push({ x: i + 1, y: j });\n    adjNodes.push({ x: i, y: j - 1 });\n    return adjNodes;\n  }\n\n  isEnd(node) {\n    return this.areEqual(this.endPos, node);\n  }\n\n  isWall(node) {\n    return this.walls.some(n => this.areEqual(n, node));\n  }\n\n  isOutOfBounds(node) {\n    return node.x < 0 || node.x >= this.rows || node.y < 0 || node.y >= this.cols;\n  }\n\n  mark(node) {\n    this.marked.push(node);\n  }\n\n  isMarked(node) {\n    return this.marked.some(n => this.areEqual(n, node));\n  }\n\n  areEqual(node1, node2) {\n    return node1.x === node2.x && node1.y === node2.y;\n  }\n\n  manhattanDistance(node1, node2) {\n    return Math.abs(node1.x - node2.x) + Math.abs(node1.y - node2.y);\n  }\n\n  dijkstraAlgorithm() {\n    const t0 = performance.now();\n    const visited = [];\n    const queue = [];\n    this.startPos.distance = 0;\n    this.startPos.path = [];\n    queue.push(this.startPos);\n    while (queue.length > 0) {\n      let minDist = Infinity, minIndex = 0, i = 0;\n      let node;\n      for (const el of queue) {\n        if (el.distance < minDist) {\n          minDist = el.distance;\n          minIndex = i;\n          node = el;\n        }\n        i++;\n      }\n      queue.splice(minIndex, 1);\n      visited.push(node);\n      node.path.push(node);\n      if (this.isEnd(node)) {\n        return { visited: visited, path: node.path, time: performance.now() - t0 };\n      }\n      for (const n of this.getAdjacentNodes(node)) {\n        if (!this.isMarked(n) && !this.isWall(n) && !this.isOutOfBounds(n)) {\n          this.mark(n);\n          n.path = [...node.path];\n          if (n.distance !== undefined) {\n            n.distance++;\n          } else {\n            n.distance = 1;\n          }\n          queue.push(n);\n        }\n      }\n    }\n  }\n\n  aStar() {\n    const t0 = performance.now();\n    const openList = [];\n    const closedList = [];\n    const visited = [];\n    this.startPos.path = [];\n    openList.push(this.startPos);\n\n    while (openList.length > 0) {\n      let minDist = Infinity, minIndex = 0, i = 0;\n      let node;\n      for (const el of openList) {\n        if (!('f' in el)) {\n          el.f = 0;\n          el.g = 0;\n          el.h = 0;\n        }\n        if (el.f < minDist) {\n          minDist = el.f;\n          minIndex = i;\n          node = el;\n        }\n        i++;\n      }\n      visited.push(node);\n      node.path.push(node);\n      if (this.areEqual(node, this.endPos)) {\n        return { visited: visited, path: node.path, time: performance.now() - t0 };\n      }\n      openList.splice(minIndex, 1);\n      closedList.push(node);\n      for (const n of this.getAdjacentNodes(node)) {\n        if (!closedList.some(x => this.areEqual(x, n)) && !this.isWall(n) && !this.isOutOfBounds(n)) {\n          const gScore = node.g + 1;\n          let gScoreIsBest = false;\n          if (!openList.some(x => this.areEqual(x, n))) {\n            gScoreIsBest = true;\n            n.h = this.manhattanDistance(n, this.endPos);\n            openList.push(n);\n          } else if (gScore < n.g) {\n            gScoreIsBest = true;\n          }\n          if (gScoreIsBest) {\n            n.path = [...node.path];\n            n.g = gScore;\n            n.f = n.g + n.h;\n          }\n        }\n      }\n    }\n    throw new Error('Path not found');\n  }\n\n  dfs() {\n    const visited = [];\n    this.startPos.path = [];\n    return this.dfsHelper(this.startPos, visited, performance.now());\n  }\n\n  dfsHelper(node, visited, t0) {\n    visited.push(node);\n    node.path.push(node);\n    this.mark(node);\n    if (this.isEnd(node)) {\n      return { visited: visited, path: node.path, time: performance.now() - t0 };\n    }\n    for (const n of this.getAdjacentNodes(node)) {\n      if (!this.isMarked(n) && !this.isWall(n) && !this.isOutOfBounds(n)) {\n        n.path = [...node.path];\n        const path = this.dfsHelper(n, [...visited], t0);\n        if (path !== undefined) {\n          return path;\n        }\n      }\n    }\n  }\n\n  bfs() {\n    const t0 = performance.now();\n    const visited = [];\n    const queue = [];\n    this.startPos.path = [];\n    queue.push(this.startPos);\n\n    while (queue.length > 0) {\n      const node = queue.shift();\n      visited.push(node);\n      node.path.push(node);\n      if (this.isEnd(node)) {\n        return { visited: visited, path: node.path, time: performance.now() - t0 };\n      }\n      for (const n of this.getAdjacentNodes(node)) {\n        if (!this.isMarked(n) && !this.isWall(n) && !this.isOutOfBounds(n)) {\n          n.path = [...node.path];\n          queue.push(n);\n          this.mark(n);\n        }\n      }\n    }\n    throw new Error('Path not found');\n  }\n\n  bidirectionalBFS() {\n    const t0 = performance.now();\n    this.startPos.path = [];\n    this.endPos.path = [];\n    const q1 = [this.startPos];\n    const q2 = [this.endPos];\n    const visited = [this.startPos, this.endPos];\n    const visited1 = [this.startPos];\n    const visited2 = [this.endPos];\n\n    while (q1.length > 0 || q2.length > 0) {\n      const pathExists1 = this.pathExistsHelper(q1, visited1, visited2, visited);\n      if (pathExists1 !== false) {\n        return { visited: visited, path: pathExists1, time: performance.now() - t0 };\n      }\n      const pathExists2 = this.pathExistsHelper(q2, visited2, visited1, visited);\n      if (pathExists2 !== false) {\n        return { visited: visited, path: pathExists2, time: performance.now() - t0 };\n      }\n    }\n    throw new Error('Path not found');\n  }\n\n  pathExistsHelper(q, visited1, visited2, visited) {\n    if (q.length > 0) {\n      const node = q.shift();\n      node.path.push(node);\n      for (const n of this.getAdjacentNodes(node)) {\n        if (!this.isWall(n) && !this.isOutOfBounds(n)) {\n          n.path = [...node.path];\n          if (visited2.some(x => this.areEqual(x, n))) {\n            n.path.push(n);\n            const path = [];\n            const path2 = visited2.find(x => this.areEqual(x, n)).path;\n            for (let i = 0; i < Math.max(n.path.length, path2.length); i++) {\n              if (i < n.path.length) path.push(n.path[i]);\n              if (i < path2.length) path.push(path2[i]);\n            }\n            return path;\n          } else if (!visited1.some(x => this.areEqual(x, n))) {\n            n.path = [...node.path];\n            visited1.push(n);\n            visited.push(n);\n            q.push(n);\n          }\n        }\n      }\n    }\n    return false;\n  }\n}","import React from 'react';\nimport './Cell.css';\n\nexport default function Cell(props) {\n\n  return (\n    <div\n      id={`cell-${props.pos.x}-${props.pos.y}`}\n      className={\"cell\" + (props.wall ? \" selected\" : \"\") + (props.start ? \" start\" : \"\") + (props.end ? \" end\" : \"\")}\n      onMouseDown={() => props.mouseDownHandler(props.pos)}\n      onMouseEnter={() => props.mouseEnterHandler(props.pos)}\n      onMouseUp={() => props.mouseLeaveHandler(props.pos)}\n      onClick={() => props.clickHandler()}\n    >\n    </div>\n  );\n};","import { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nexport default function MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};","import { Button, Card, Snackbar } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Algorithms from './algorithms/algorithms';\nimport Cell from './Cell';\nimport './Grid.css';\nimport MySnackbarContentWrapper from './MySnackbarContentWrapper';\n\nexport default function Grid(props) {\n\n  const NUM_ROWS = (3 / 4) * window.innerHeight / 26;\n  const NUM_COLUMNS = (window.innerWidth - 120) / 26;\n  const rows = [];\n\n  const [startPos, setStartPos] = useState({ x: Math.floor(NUM_ROWS / 2), y: Math.floor(NUM_COLUMNS / 5) });\n  const [endPos, setEndPos] = useState({ x: Math.floor(NUM_ROWS / 2), y: Math.floor(NUM_COLUMNS - NUM_COLUMNS / 5) });\n  const [walls, setWalls] = useState([]);\n  const [clicked, setClicked] = useState(false);\n  const [changingStartPos, setChangingStartPos] = useState(false);\n  const [changingEndPos, setChangingEndPos] = useState(false);\n  const [pathFound, setPathFound] = useState(false);\n  const [pathNotFound, setPathNotFound] = useState(false);\n  const [pathLength, setPathLength] = useState(0);\n  const [pathTime, setPathTime] = useState(0);\n\n  const isStartPos = (pos) => {\n    return pos.x === startPos.x && pos.y === startPos.y;\n  };\n\n  const isEndPos = (pos) => {\n    return pos.x === endPos.x && pos.y === endPos.y;\n  };\n\n  const isWall = (pos) => {\n    return walls.some(n => n.x === pos.x && n.y === pos.y);\n  };\n\n  const animate = (visited, path) => {\n    let counter = 0;\n    for (const node of visited) {\n      if (isStartPos(node) || isEndPos(node)) continue;\n      setTimeout(() => {\n        document.getElementById(`cell-${node.x}-${node.y}`).classList.add('visited');\n      }, 2.5 / props.speed * counter);\n      counter++;\n    }\n    for (const node of path) {\n      if (isStartPos(node) || isEndPos(node)) continue;\n      setTimeout(() => {\n        document.getElementById(`cell-${node.x}-${node.y}`).classList.add('path');\n      }, 2.5 / props.speed * counter);\n      counter++;\n    }\n  };\n\n  const clearCells = () => {\n    for (let i = 0; i < NUM_ROWS; i++) {\n      for (let j = 0; j < NUM_COLUMNS; j++) {\n        document.getElementById(`cell-${i}-${j}`).classList.remove('path');\n        document.getElementById(`cell-${i}-${j}`).classList.remove('visited');\n      }\n    }\n  };\n\n  const addWall = (pos) => {\n    if (isStartPos(pos) || isEndPos(pos)) return;\n    if (isWall(pos)) {\n      removeWall(pos);\n    } else {\n      setWalls(walls => [...walls, pos]);\n    }\n  };\n\n  const removeWall = (pos) => {\n    const index = walls.findIndex(n => n.x === pos.x && n.y === pos.y);\n    if (index === -1) return;\n    walls.splice(index, 1);\n    setWalls(walls => [...walls]);\n  };\n\n  for (let i = 0; i < NUM_ROWS; i++) {\n    const elements = [];\n    for (let j = 0; j < NUM_COLUMNS; j++) {\n      const pos = { x: i, y: j };\n      elements.push(\n        <Cell\n          key={j}\n          start={isStartPos(pos)}\n          end={isEndPos(pos)}\n          pos={pos}\n          wall={isWall(pos)}\n          mouseDownHandler={(pos) => {\n            setClicked(true);\n            addWall(pos);\n          }}\n          mouseEnterHandler={(pos) => {\n            if (changingStartPos) {\n              setStartPos(pos);\n            }\n            if (changingEndPos) {\n              setEndPos(pos);\n            }\n            if (clicked) {\n              addWall(pos);\n            }\n          }}\n          mouseLeaveHandler={(pos) => {\n            setClicked(false);\n          }}\n          clickHandler={() => {\n            if (changingStartPos) {\n              setStartPos(pos);\n              setChangingStartPos(false);\n              removeWall(pos);\n            }\n            if (changingEndPos) {\n              setEndPos(pos);\n              setChangingEndPos(false);\n              removeWall(pos);\n            }\n            if (isStartPos(pos) && !changingStartPos) {\n              setChangingStartPos(true);\n            }\n            if (isEndPos(pos) && !changingEndPos) {\n              setChangingEndPos(true);\n            }\n          }}\n        />\n      );\n    }\n    rows.push(<div className=\"row\" key={i}>{elements}</div>);\n  }\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={pathNotFound}\n        autoHideDuration={6000}\n        onClose={() => { setPathNotFound(false); }}\n      >\n        <MySnackbarContentWrapper\n          onClose={() => { setPathNotFound(false); }}\n          variant=\"error\"\n          message=\"Path not found!\"\n        />\n      </Snackbar>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={pathFound}\n        autoHideDuration={6000}\n        onClose={() => { setPathFound(false); }}\n      >\n        <MySnackbarContentWrapper\n          onClose={() => { setPathFound(false); }}\n          variant=\"success\"\n          message={`Path found! (Path length: ${pathLength}, time: ${pathTime.toFixed(2)}ms)`}\n        />\n      </Snackbar>\n      <Card style={{ marginTop: 12 }} className=\"menu\">\n        <Button color=\"primary\" onClick={() => {\n          clearCells();\n          const algorithms = new Algorithms(NUM_ROWS, NUM_COLUMNS, startPos, endPos, walls);\n          try {\n            const result = algorithms.bfs();\n            animate(result.visited, result.path);\n            setPathLength(result.path.length);\n            setPathTime(result.time);\n            setPathFound(true);\n          } catch (error) {\n            setPathNotFound(true);\n          }\n        }}>\n          Breadth first Search\n          </Button>\n        <Button color=\"primary\" onClick={() => {\n          clearCells();\n          const algorithms = new Algorithms(NUM_ROWS, NUM_COLUMNS, startPos, endPos, walls);\n          try {\n            const result = algorithms.dfs();\n            animate(result.visited, result.path);\n            setPathLength(result.path.length);\n            setPathTime(result.time);\n            setPathFound(true);\n          } catch (error) {\n            setPathNotFound(true);\n          }\n        }}>\n          Depth first Search\n          </Button>\n        <Button color=\"primary\" onClick={() => {\n          clearCells();\n          const algorithms = new Algorithms(NUM_ROWS, NUM_COLUMNS, startPos, endPos, walls);\n          try {\n            const result = algorithms.bidirectionalBFS();\n            animate(result.visited, result.path);\n            setPathLength(result.path.length);\n            setPathTime(result.time);\n            setPathFound(true);\n          } catch (error) {\n            setPathNotFound(true);\n          }\n        }}>\n          Bidirectional BFS\n          </Button>\n        <Button color=\"primary\" onClick={() => {\n          clearCells();\n          const algorithms = new Algorithms(NUM_ROWS, NUM_COLUMNS, startPos, endPos, walls);\n          try {\n            const result = algorithms.aStar();\n            animate(result.visited, result.path);\n            setPathLength(result.path.length);\n            setPathTime(result.time);\n            setPathFound(true);\n          } catch (error) {\n            setPathNotFound(true);\n          }\n        }}>\n          A* Search\n          </Button>\n        <br />\n        <Button color=\"default\" onClick={() => {\n          setWalls([]);\n        }}>\n          Clear walls\n          </Button>\n        <Button color=\"default\" onClick={() => {\n          clearCells();\n        }}>\n          Clear path\n          </Button>\n      </Card>\n      <div>\n        {rows}\n      </div>\n    </>\n  );\n};","import { AppBar, Button, Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Icon, IconButton, Link, Slider, Toolbar, Typography } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { loadCSS } from 'fg-loadcss';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Grid from './Grid';\n\nfunction App() {\n\n  React.useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#font-awesome-css'),\n    );\n  }, []);\n\n  const [speed, setSpeed] = useState(0.5);\n  const [realSpeed, setRealSpeed] = useState(0.5);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar style={{ minHeight: 48 }}>\n          <Typography variant=\"h6\" style={{ marginRight: 16, marginLeft: -12 }}>\n            Pathfinding Algorithms\n        </Typography>\n          <IconButton color=\"inherit\" style={{ marginLeft: 'auto', marginRight: -12 }}\n            onClick={() => setSettingsOpen(true)}>\n            <SettingsIcon />\n          </IconButton>\n          <IconButton color=\"inherit\" style={{ marginLeft: 10 }}\n            href=\"https://github.com/lluiscamino/pathfinding-algorithms\" target=\"_blank\" rel=\"noopener\">\n            <Icon className=\"fab fa-github\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Dialog open={settingsOpen} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Settings</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Adjust the speed of the simulation.\n          </DialogContentText>\n          <div>\n            <Typography gutterBottom>\n              Speed\n            </Typography>\n            <Slider min={1} value={speed * 100} onChange={(ev, s) => setSpeed(s / 100)} aria-labelledby=\"continuous-slider\" />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {\n            setSpeed(realSpeed);\n            setSettingsOpen(false);\n          }} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={() => {\n            setRealSpeed(speed);\n            setSettingsOpen(false);\n          }} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Container maxWidth={false}>\n        <Grid speed={realSpeed} />\n        <footer>\n          Made by <Link href=\"https://lluis.life\" target=\"_blank\" rel=\"noopener\">Lluís Camino</Link> with React\n        </footer>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}